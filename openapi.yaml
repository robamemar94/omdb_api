openapi: 3.0.0
info:
  title: Movie API
  version: 1.0.0
  description: API for managing movie operations
servers:
  - url: https://brite-test-388527781986.us-central1.run.app
paths:
  /movies:
    get:
      summary: Retrieve a list of movies
      description: This endpoint retrieves a paginated list of movies from the database, with optional filters for title, year, movie type, and IMDb ID.
      tags:
        - Movies
      parameters:
        - name: limit
          in: query
          required: false
          description: Number of movies to return per page (default is 10).
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          required: false
          description: Page number for pagination (default is 1).
          schema:
            type: integer
            default: 1
        - name: order_by
          in: query
          required: false
          description: Field to order the results by (default is title).
          schema:
            type: string
            enum:
              - title
              - year
              - movie_type
            default: title
        - name: title
          in: query
          required: false
          description: Filter movies by title.
          schema:
            type: string
        - name: year
          in: query
          required: false
          description: Filter movies by release year (e.g., "1999").
          schema:
            type: string
        - name: movie_type
          in: query
          required: false
          description: Filter movies by type (e.g., "Action").
          schema:
            type: string
        - name: imdb_id
          in: query
          required: false
          description: Filter movies by IMDb ID (e.g., "tt1234567").
          schema:
            type: string
      responses:
        '200':
          description: A successful response containing the list of movies
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      total_count:
                        type: integer
                      next_page:
                        type: integer
                      prev_page:
                        type: integer
                      movies:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            year:
                              type: string
                            movie_type:
                              type: string
                            imdb_id:
                              type: string
                            poster:
                              type: string
                  message:
                    type: string
        '400':
          description: Bad request due to invalid input
        '404':
          description: Not found
    post:
      summary: Add a new movie
      tags:
        - Movies
      description: Adds a new movie to the database. The movie is searched in the OMDB database using the provided title. If found, its details are fetched and saved in the local database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the movie to be added.
              required:
                - title
      responses:
        '201':
          description: Movie successfully added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movie 'montecristo' added successfully."
                  movie:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The unique ID of the movie.
                      title:
                        type: string
                        description: The title of the movie.
                      year:
                        type: string
                        description: The year of the movie's release.
                      movie_type:
                        type: string
                        description: The type of the movie (e.g., series, movie).
                      imdb_id:
                        type: string
                        description: The IMDb ID of the movie.
                      poster:
                        type: string
                        description: The URL of the movie's poster.
        '400':
          description: The request body is missing required fields.
        '409':
          description: The movie is already registered in the database.
        '404':
          description: Movie not found in OMDB.
  /movies/{movie_id}:
    get:
      summary: Get a movie by ID
      description: Retrieve detailed information about a specific movie using its ID.
      tags:
        - Movies
      parameters:
        - name: movie_id
          in: path
          required: true
          description: ID of the movie to retrieve.
          schema:
            type: integer
      responses:
        '200':  # <-- Corregido de esta manera
          description: Movie details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique identifier for the movie.
                  title:
                    type: string
                    description: Title of the movie.
                  year:
                    type: string
                    description: Release year of the movie.
                  movie_type:
                    type: string
                    description: Type of the movie (e.g., movie, series).
                  imdb_id:
                    type: string
                    description: IMDb ID of the movie.
                  poster:
                    type: string
                    description: URL of the movie poster.
        '404':
          description: Movie not found
    delete:
      summary: Delete a movie by ID
      description: Remove a movie from the database using its ID.
      tags:
        - Movies
      parameters:
        - name: movie_id
          in: path
          required: true
          description: ID of the movie to delete.
          schema:
            type: integer
      responses:
        '204':
          description: Movie deleted successfully
        '404':
          description: Movie not found
        '401':
          description: Not authorized

  /register:
    post:
      summary: Register a new user
      description: This endpoint allows new users to register by providing a username and password.
      tags:
        - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Bad request due to invalid input
        '409':
          description: Conflict (user already exists)

  /login:
    post:
      summary: Login an existing user
      description: This endpoint allows existing users to log in and obtain an authentication token by providing their username and password.
      tags:
        - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Successful login, returns an authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  token:
                    type: string
                  message:
                    type: string
        '400':
          description: Bad request due to invalid input
        '401':
          description: Unauthorized (invalid credentials)
